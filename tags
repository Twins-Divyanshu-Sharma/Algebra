!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/mnt/exoplanet/GNULinuxDevelopment/CProjects/AI/Algebra/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210110.0/
$(prog)	makefile	/^$(prog):	$(objects)$/;"	t
Algebra	README.md	/^# Algebra$/;"	c
H_AL_Z3BR0_H	incsrc/Algebra.h	/^#define H_AL_Z3BR0_H$/;"	d
Vec	incsrc/Algebra.cpp	/^Vec::Vec(Vec& vec)$/;"	f	class:Vec
Vec	incsrc/Algebra.cpp	/^Vec::Vec(Vec&& vec)$/;"	f	class:Vec
Vec	incsrc/Algebra.cpp	/^Vec::Vec(int size)$/;"	f	class:Vec
Vec	incsrc/Algebra.h	/^class Vec$/;"	c
all	makefile	/^all:	directories $(prog)$/;"	t
bld/%.o	makefile	/^bld\/%.o:	incsrc\/%.cpp$/;"	t
classes	makefile	/^classes	=$(shell find incsrc -name *.cpp)$/;"	m
clean	makefile	/^clean:$/;"	t
data	incsrc/Algebra.h	/^        float* data;$/;"	m	class:Vec	typeref:typename:float *
directories	makefile	/^directories:$/;"	t
getSize	incsrc/Algebra.cpp	/^int Vec::getSize()$/;"	f	class:Vec	typeref:typename:int
main	incsrc/main.cpp	/^int main()$/;"	f	typeref:typename:int
objects	makefile	/^objects	=$(patsubst incsrc\/%,bld\/%,$(classes:.cpp=.o))$/;"	m
operator *	incsrc/Algebra.cpp	/^Vec operator*(float f, Vec& vec)$/;"	f	typeref:typename:Vec
operator *	incsrc/Algebra.cpp	/^Vec operator*(float f, Vec&& vec)$/;"	f	typeref:typename:Vec
operator -	incsrc/Algebra.cpp	/^Vec operator-(Vec& a, Vec& b)$/;"	f	typeref:typename:Vec
operator -	incsrc/Algebra.cpp	/^Vec operator-(Vec& a, Vec&& b)$/;"	f	typeref:typename:Vec
operator -	incsrc/Algebra.cpp	/^Vec operator-(Vec&& a, Vec& b)$/;"	f	typeref:typename:Vec
operator -	incsrc/Algebra.cpp	/^Vec operator-(Vec&& a, Vec&& b)$/;"	f	typeref:typename:Vec
operator =	incsrc/Algebra.cpp	/^Vec& Vec::operator=(Vec& vec)$/;"	f	class:Vec	typeref:typename:Vec &
operator =	incsrc/Algebra.cpp	/^Vec& Vec::operator=(Vec&& vec)$/;"	f	class:Vec	typeref:typename:Vec &
operator []	incsrc/Algebra.cpp	/^float& Vec::operator[](int i)$/;"	f	class:Vec	typeref:typename:float &
prog	makefile	/^prog	=math$/;"	m
purge	makefile	/^purge: clean$/;"	t
size	incsrc/Algebra.h	/^        int size;$/;"	m	class:Vec	typeref:typename:int
~Vec	incsrc/Algebra.cpp	/^Vec::~Vec()$/;"	f	class:Vec
